[{"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\index.js":"1","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\reportWebVitals.js":"2","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\App.js":"3","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\AppContainer.tsx":"4","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\listItems.tsx":"5","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\Theme.tsx":"6","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\TodoPage.tsx":"7","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\dashboard\\dashboard.tsx":"8","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Game.tsx":"9","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\FormTodo.tsx":"10","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\TaskList.tsx":"11","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Board.tsx":"12","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Square.tsx":"13"},{"size":534,"mtime":1610972218837,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":282,"mtime":1610977247013,"results":"17","hashOfConfig":"15"},{"size":6868,"mtime":1616212673165,"results":"18","hashOfConfig":"15"},{"size":2630,"mtime":1616216037557,"results":"19","hashOfConfig":"15"},{"size":552,"mtime":1616212659774,"results":"20","hashOfConfig":"15"},{"size":911,"mtime":1616216368215,"results":"21","hashOfConfig":"15"},{"size":131,"mtime":1616214835859,"results":"22","hashOfConfig":"15"},{"size":3610,"mtime":1616214835859,"results":"23","hashOfConfig":"15"},{"size":1361,"mtime":1616216379530,"results":"24","hashOfConfig":"15"},{"size":1373,"mtime":1616215788094,"results":"25","hashOfConfig":"15"},{"size":1647,"mtime":1616215589115,"results":"26","hashOfConfig":"15"},{"size":923,"mtime":1616216160041,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1heufw8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\index.js",[],["60","61"],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\reportWebVitals.js",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\App.js",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\AppContainer.tsx",["62"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport { theme } from '../Theme';\r\nimport TodoPage from './todo/TodoPage';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Dashboard from './dashboard/dashboard';\r\nimport TickTacToe from './ticTacToe/TickTacToe';\r\nimport Game from './ticTacToe/Game';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://edelcustodio.com/\">\r\n        Edel Custodio\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    }\r\n}));\r\n\r\nexport default function AppContainer() {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const classes = useStyles();\r\n    \r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    \r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                    <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        Dashboard\r\n                    </Typography>\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={4} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                    }}\r\n                    open={open}\r\n                >\r\n                    <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>{mainListItems}</List>\r\n                    <Divider />\r\n                    <List>{secondaryListItems}</List>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer} />\r\n                    <Container maxWidth=\"lg\" className={classes.container}>\r\n                        \r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={Dashboard}></Route>\r\n                                <Route path=\"/todo\" render={(props) => <TodoPage fixedHeightPaper={fixedHeightPaper} ></TodoPage> } ></Route>\r\n                                <Route path=\"/tic-tac-toe\" component={Game} ></Route>\r\n                            </Switch>\r\n                        \r\n                        <Box pt={4}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}",["63","64"],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\listItems.tsx",["65","66","67","68","69","70"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { Link } from 'react-router-dom';\r\nimport TodoPage from './todo/TodoPage';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button component={React.forwardRef((props: any, innerRef) => (<Link {...props} to=\"/\" ref={innerRef}></Link>))} >\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button component={React.forwardRef((props: any, innerRef) => (<Link {...props} to=\"/todo\" ref={innerRef} ></Link>))}>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Todo\" />\r\n    </ListItem>\r\n    <ListItem button component={React.forwardRef((props: any, innerRef) => (<Link {...props} to=\"/tic-tac-toe\" ref={innerRef} ></Link>))}>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tic tac toe\" />\r\n    </ListItem>\r\n    {/* <ListItem button>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Customers\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reports\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LayersIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Integrations\" />\r\n    </ListItem> */}\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    {/* <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last quarter\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end sale\" />\r\n    </ListItem> */}\r\n  </div>\r\n);","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\Theme.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\TodoPage.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\dashboard\\dashboard.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Game.tsx",["71","72","73","74"],"import React, { useState } from 'react';\r\nimport Board from './Board';\r\n\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n    const [history, setHistory] = useState([{ squares: Array(9).fill(null), location: [], selected: false }]);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [buttonBold, setButtonBold] = useState(false);\r\n\r\n    const handleChangeBoard = (i: any, location: any, e: any) => {\r\n        var target = e.currentTarget;\r\n        var parent = target.parentElement;\r\n        var child = target.children[0];\r\n        \r\n        console.log('location', location);\r\n        const h = history.slice(0, stepNumber + 1);\r\n        const current = h[h.length - 1];\r\n        const sqrs = current.squares.slice();\r\n        const selected = current.selected;\r\n        if (calculateWinner(sqrs) || sqrs[i]) {\r\n            return;\r\n        }\r\n        sqrs[i] = xIsNext ? 'X' : 'O';\r\n        if(xIsNext) {\r\n            child.innerHTML = 'games';\r\n        } else {\r\n            child.innerHTML = 'fiber_manual_record';\r\n        }\r\n\r\n        setHistory(h.concat([{ squares: sqrs, location: location, selected: false }]));\r\n        setXIsNext(!xIsNext);\r\n        setStepNumber(h.length);\r\n    }\r\n\r\n    const calculateWinner = (squares: any[]) => {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const jumpTo = (move: number) => {\r\n        setStepNumber(move);\r\n        setXIsNext((move % 2) === 0);\r\n        const current: any = history.find((s, i) => i === move);\r\n        current.selected = !current.selected;\r\n        let copyHistory = history.slice();\r\n        copyHistory = copyHistory.map(s => {\r\n            return {\r\n                squares: s.squares,\r\n                location: s.location,\r\n                selected: false\r\n            }\r\n        });\r\n        copyHistory = copyHistory.map((s, i) => i === move ? current : s);\r\n        setHistory(copyHistory);\r\n    }\r\n\r\n    const h = history;\r\n    const current = h[stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    console.log('history', h);\r\n\r\n    const moves = h.map((step, move) => {\r\n        const loc = `[${step.location.join(',')}]`\r\n        const desc = move ?\r\n        `Go to move # ${move} - loc: ${loc}` :\r\n        `Go to game start`;\r\n\r\n        return (\r\n            <li key={move}>\r\n                <button style={{ fontWeight: step.selected ? 'bold' : 'normal' }} onClick={(event) => jumpTo(move)}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = `Winner: ${winner}`;\r\n    } else {\r\n        status = `Next player: ${xIsNext ? 'X' : 'O'}`;\r\n    }    \r\n    \r\n    return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board \r\n                    squares={current.squares}\r\n                    onChangeBoard={(i: any, location: any, e: any) => handleChangeBoard(i, location, e)}>\r\n                </Board>\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n                <ol>{moves}</ol>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\FormTodo.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\TaskList.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Board.tsx",["75","76","77"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Square from './Square';\r\n\r\nimport './Board.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      height: 140,\r\n      width: 100,\r\n    },\r\n    control: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n\r\nconst Board = (props: any) => {\r\n\r\n    const [spacing, setSpacing] = useState<Spacing>(2);\r\n\r\n    const classes = useStyles();\r\n    let contSquare = 0;\r\n\r\n    const renderSquare = (i: any, location: any) => {\r\n        contSquare = i + 1;\r\n        return (<Square \r\n                value={props.squares[i]}\r\n                onChangeSquare={(e: any) => props.onChangeBoard(i, location, e)}>\r\n            </Square>);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n                {[0, 1, 2].map((x, ix) => (\r\n                    <Grid key={x} container justify=\"center\" spacing={spacing}>\r\n                        {[0, 1, 2].map((y, iy) => (\r\n                            <Grid key={y} item>\r\n                                {renderSquare(contSquare, [x, y])}\r\n                                \r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                ))}\r\n                \r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport type Spacing = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | undefined;\r\n\r\nexport default Board;\r\n","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Square.tsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":24,"column":8,"nodeType":"84","messageId":"85","endLine":24,"endColumn":18},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"86","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":21},{"ruleId":"82","severity":1,"message":"87","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":18},{"ruleId":"82","severity":1,"message":"88","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":20},{"ruleId":"82","severity":1,"message":"89","line":10,"column":8,"nodeType":"84","messageId":"85","endLine":10,"endColumn":18},{"ruleId":"82","severity":1,"message":"90","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":22},{"ruleId":"82","severity":1,"message":"91","line":13,"column":8,"nodeType":"84","messageId":"85","endLine":13,"endColumn":16},{"ruleId":"82","severity":1,"message":"92","line":10,"column":12,"nodeType":"84","messageId":"85","endLine":10,"endColumn":22},{"ruleId":"82","severity":1,"message":"93","line":10,"column":24,"nodeType":"84","messageId":"85","endLine":10,"endColumn":37},{"ruleId":"82","severity":1,"message":"94","line":14,"column":13,"nodeType":"84","messageId":"85","endLine":14,"endColumn":19},{"ruleId":"82","severity":1,"message":"95","line":21,"column":15,"nodeType":"84","messageId":"85","endLine":21,"endColumn":23},{"ruleId":"82","severity":1,"message":"96","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"97","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":13},{"ruleId":"82","severity":1,"message":"98","line":26,"column":21,"nodeType":"84","messageId":"85","endLine":26,"endColumn":31},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'TickTacToe' is defined but never used.","Identifier","unusedVar","'ListSubheader' is defined but never used.","'PeopleIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'LayersIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'TodoPage' is defined but never used.","'buttonBold' is assigned a value but never used.","'setButtonBold' is assigned a value but never used.","'parent' is assigned a value but never used.","'selected' is assigned a value but never used.","'useEffect' is defined but never used.","'Paper' is defined but never used.","'setSpacing' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]