[{"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\index.js":"1","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\reportWebVitals.js":"2","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\App.js":"3","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\AppContainer.tsx":"4","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\listItems.tsx":"5","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\Theme.tsx":"6","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\TodoPage.tsx":"7","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\dashboard\\dashboard.tsx":"8","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Game.tsx":"9","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\FormTodo.tsx":"10","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\TaskList.tsx":"11","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Board.tsx":"12","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Square.tsx":"13","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\books\\Books.tsx":"14","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\books\\useBookSearch.tsx":"15"},{"size":534,"mtime":1610972218837,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":282,"mtime":1610977247013,"results":"19","hashOfConfig":"17"},{"size":7367,"mtime":1616941296923,"results":"20","hashOfConfig":"17"},{"size":2914,"mtime":1616969721743,"results":"21","hashOfConfig":"17"},{"size":552,"mtime":1616212659774,"results":"22","hashOfConfig":"17"},{"size":911,"mtime":1616216368215,"results":"23","hashOfConfig":"17"},{"size":131,"mtime":1616214835859,"results":"24","hashOfConfig":"17"},{"size":3610,"mtime":1616214835859,"results":"25","hashOfConfig":"17"},{"size":1361,"mtime":1616216379530,"results":"26","hashOfConfig":"17"},{"size":1373,"mtime":1616215788094,"results":"27","hashOfConfig":"17"},{"size":1629,"mtime":1616462528122,"results":"28","hashOfConfig":"17"},{"size":923,"mtime":1616216160041,"results":"29","hashOfConfig":"17"},{"size":3911,"mtime":1616941296923,"results":"30","hashOfConfig":"17"},{"size":1389,"mtime":1616470635310,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1heufw8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\index.js",[],["66","67"],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\reportWebVitals.js",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\App.js",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\AppContainer.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\listItems.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\Theme.tsx",[],["68","69"],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\TodoPage.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\dashboard\\dashboard.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Game.tsx",["70","71","72","73"],"import React, { useState } from 'react';\r\nimport Board from './Board';\r\n\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n    const [history, setHistory] = useState([{ squares: Array(9).fill(null), location: [], selected: false }]);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [buttonBold, setButtonBold] = useState(false);\r\n\r\n    const handleChangeBoard = (i: any, location: any, e: any) => {\r\n        var target = e.currentTarget;\r\n        var parent = target.parentElement;\r\n        var child = target.children[0];\r\n        \r\n        console.log('location', location);\r\n        const h = history.slice(0, stepNumber + 1);\r\n        const current = h[h.length - 1];\r\n        const sqrs = current.squares.slice();\r\n        const selected = current.selected;\r\n        if (calculateWinner(sqrs) || sqrs[i]) {\r\n            return;\r\n        }\r\n        sqrs[i] = xIsNext ? 'X' : 'O';\r\n        if(xIsNext) {\r\n            child.innerHTML = 'games';\r\n        } else {\r\n            child.innerHTML = 'fiber_manual_record';\r\n        }\r\n\r\n        setHistory(h.concat([{ squares: sqrs, location: location, selected: false }]));\r\n        setXIsNext(!xIsNext);\r\n        setStepNumber(h.length);\r\n    }\r\n\r\n    const calculateWinner = (squares: any[]) => {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const jumpTo = (move: number) => {\r\n        setStepNumber(move);\r\n        setXIsNext((move % 2) === 0);\r\n        const current: any = history.find((s, i) => i === move);\r\n        current.selected = !current.selected;\r\n        let copyHistory = history.slice();\r\n        copyHistory = copyHistory.map(s => {\r\n            return {\r\n                squares: s.squares,\r\n                location: s.location,\r\n                selected: false\r\n            }\r\n        });\r\n        copyHistory = copyHistory.map((s, i) => i === move ? current : s);\r\n        setHistory(copyHistory);\r\n    }\r\n\r\n    const h = history;\r\n    const current = h[stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    console.log('history', h);\r\n\r\n    const moves = h.map((step, move) => {\r\n        const loc = `[${step.location.join(',')}]`\r\n        const desc = move ?\r\n        `Go to move # ${move} - loc: ${loc}` :\r\n        `Go to game start`;\r\n\r\n        return (\r\n            <li key={move}>\r\n                <button style={{ fontWeight: step.selected ? 'bold' : 'normal' }} onClick={(event) => jumpTo(move)}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = `Winner: ${winner}`;\r\n    } else {\r\n        status = `Next player: ${xIsNext ? 'X' : 'O'}`;\r\n    }    \r\n    \r\n    return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board \r\n                    squares={current.squares}\r\n                    onChangeBoard={(i: any, location: any, e: any) => handleChangeBoard(i, location, e)}>\r\n                </Board>\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n                <ol>{moves}</ol>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\FormTodo.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\todo\\TaskList.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Board.tsx",["74","75","76"],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\ticTacToe\\Square.tsx",[],"C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\books\\Books.tsx",["77"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport useBookSearch from './useBookSearch';\r\n\r\nimport { TextField, Grid, Paper } from \"@material-ui/core\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n});\r\n\r\nconst Books = () => {\r\n    const [query, setQuery] = useState<string>('');\r\n    const [pageNumber, setPageNumber] = useState<number>(1);\r\n\r\n    const {\r\n        loading,\r\n        error,\r\n        books,\r\n        hasMore\r\n    } = useBookSearch(query, pageNumber);\r\n\r\n    const observer = useRef<any>();\r\n    const lastBookElementRef = useCallback((node: any) => {\r\n        if (loading) {\r\n            return;\r\n        }\r\n\r\n        if (observer.current) {\r\n            observer.current.disconnect();\r\n        }\r\n\r\n        observer.current = new IntersectionObserver((entries: any) => {\r\n            if (entries[0].isIntersecting && hasMore) {\r\n                setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n            }\r\n        });\r\n\r\n        if (node) {\r\n            observer.current.observe(node);\r\n        }\r\n\r\n    }, [loading, hasMore]);\r\n\r\n    const handleSearch = (e: any) => {\r\n        setQuery(e.target.value);\r\n        setPageNumber(1);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={10}>\r\n                <Grid item xs={12} md={4} lg={12}>\r\n                    <Paper>\r\n                        <TextField\r\n                            label=\"Search\"\r\n                            type=\"text\"\r\n                            className=\"text\"\r\n                            value={query}\r\n                            onChange={handleSearch}\r\n                            fullWidth\r\n                        />\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Title</TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {books.map((book: any, index: number) => {\r\n                                    if (books.length === index + 1) {\r\n                                        return <TableRow key={book} ref={lastBookElementRef}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {book}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                    } else {\r\n                                        return <TableRow key={book}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {book}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                    }\r\n                                    \r\n                                })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Books;","C:\\Users\\ecust\\source\\repos\\my-todo-list-app\\src\\components\\books\\useBookSearch.tsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":10,"column":12,"nodeType":"84","messageId":"85","endLine":10,"endColumn":22},{"ruleId":"82","severity":1,"message":"86","line":10,"column":24,"nodeType":"84","messageId":"85","endLine":10,"endColumn":37},{"ruleId":"82","severity":1,"message":"87","line":14,"column":13,"nodeType":"84","messageId":"85","endLine":14,"endColumn":19},{"ruleId":"82","severity":1,"message":"88","line":21,"column":15,"nodeType":"84","messageId":"85","endLine":21,"endColumn":23},{"ruleId":"82","severity":1,"message":"89","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"90","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":13},{"ruleId":"82","severity":1,"message":"91","line":26,"column":21,"nodeType":"84","messageId":"85","endLine":26,"endColumn":31},{"ruleId":"82","severity":1,"message":"92","line":28,"column":9,"nodeType":"84","messageId":"85","endLine":28,"endColumn":14},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'buttonBold' is assigned a value but never used.","Identifier","unusedVar","'setButtonBold' is assigned a value but never used.","'parent' is assigned a value but never used.","'selected' is assigned a value but never used.","'useEffect' is defined but never used.","'Paper' is defined but never used.","'setSpacing' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]